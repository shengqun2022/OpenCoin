{
  "address": "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeAccount",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_tokenGet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountGet",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_tokenGive",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountGive",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Cancel",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blance",
          "type": "uint256"
        }
      ],
      "name": "Depost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_tokenGet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountGet",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_tokenGive",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountGive",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Order",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_tokenGet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountGet",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_tokenGive",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountGive",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Trade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blance",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "cancelOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositEther",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeAccount",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "fillOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenGet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountGet",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenGive",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountGive",
          "type": "uint256"
        }
      ],
      "name": "markOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderCancel",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "orderCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderFill",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenGet",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountGet",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenGive",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountGive",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x12f0eb43c069147facd9af1b17ebc2a5ea3bb3dbec9ba112ef25b0cc50fe373a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
    "transactionIndex": 0,
    "gasUsed": "2072539",
    "logsBloom": "0x
    "blockHash": "0xf470c063622c6c7e093562ff529b533da48e06046eb93c08736a50ce96ca35c2",
    "transactionHash": "0x12f0eb43c069147facd9af1b17ebc2a5ea3bb3dbec9ba112ef25b0cc50fe373a",
    "logs": [],
    "blockNumber": 25,
    "cumulativeGasUsed": "2072539",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xa0Ee7A142d267C1f36714E4a8F75612F20a79720",
    10
  ],
  "numDeployments": 2,
  "solcInputHash": "9abb7f6a077a34fc56f9f113a4c157fd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_tokenGet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountGet\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_tokenGive\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountGive\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blance\",\"type\":\"uint256\"}],\"name\":\"Depost\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_tokenGet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountGet\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_tokenGive\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountGive\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Order\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_tokenGet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountGet\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_tokenGive\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountGive\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blance\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"fillOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenGet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountGet\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenGive\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountGive\",\"type\":\"uint256\"}],\"name\":\"markOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderCancel\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderFill\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenGet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountGet\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenGive\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountGive\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Exchange.sol\":\"Exchange\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Exchange.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.24;\\nimport \\\"./Token.sol\\\";\\ncontract Exchange {\\n    //\\u6536\\u8d39\\u7684\\u8d26\\u6237\\u5730\\u5740\\n    address public feeAccount;\\n    uint public feePercent;  //\\u8d39\\u7387\\n    address  constant ETHER = address(0);\\n\\n    struct _Order {\\n         uint id;\\n         address user;\\n         address tokenGet;\\n         uint amountGet;\\n         address tokenGive;\\n         uint  amountGive;\\n         uint timestamp;\\n    }\\n    \\n    mapping(address=> mapping(address=>uint)) public tokens;\\n    mapping(uint => _Order) public orders;\\n    uint public orderCount;\\n\\n    mapping(uint=> bool) public orderCancel;\\n    mapping(uint=> bool) public orderFill;\\n\\n    event Depost(address token, address user, uint amount, uint blance);\\n    event Withdraw(address token, address user, uint amount, uint blance);\\n    event Order(uint id,address user,address _tokenGet, uint _amountGet,address _tokenGive,uint _amountGive,uint timestamp);\\n    event Cancel(uint id,address user,address _tokenGet, uint _amountGet,address _tokenGive,uint _amountGive,uint timestamp);\\n    event Trade(uint id,address user,address _tokenGet, uint _amountGet,address _tokenGive,uint _amountGive,uint timestamp);\\n\\n    constructor(address _feeAccount, uint _feePercent) {\\n        feeAccount = _feeAccount;\\n        feePercent = _feePercent;\\n    }\\n\\n    function depositEther () payable public {\\n        tokens[ETHER][msg.sender] = tokens[ETHER][msg.sender] + msg.value;\\n        emit Depost(ETHER,msg.sender,msg.value,tokens[ETHER][msg.sender]);\\n    }\\n\\n    function depositToken (address _token, uint _amount) public {\\n        require(_token!= address(0),'unvalid token');\\n        require(Token(_token).transferFrom(msg.sender,address(this),_amount),'trans fail');\\n        tokens[_token][msg.sender] = tokens[_token][msg.sender] + _amount;\\n        emit Depost(_token,msg.sender,_amount,tokens[_token][msg.sender]);\\n    }\\n\\n    function  withdrawEther (uint _amount) payable public {\\n        require(tokens[ETHER][msg.sender] >= _amount,'amount is no enough ') ;\\n         tokens[ETHER][msg.sender] = tokens[ETHER][msg.sender] - _amount;\\n         payable(msg.sender).transfer(_amount);\\n         emit Withdraw(ETHER,msg.sender,_amount,tokens[ETHER][msg.sender]);\\n    }\\n\\n    function  withdrawToken(address _token,uint _amount)  public {\\n        require(tokens[_token][msg.sender] >= _amount,'amount is no enough ') ;\\n         tokens[_token][msg.sender] = tokens[_token][msg.sender] - _amount;\\n         Token(_token).transfer(msg.sender,_amount);\\n         emit Withdraw(_token,msg.sender,_amount,tokens[_token][msg.sender]);\\n    }\\n\\n    function balanceOf(address _token,address _user) public view  returns(uint) {\\n        return tokens[_token][_user];\\n    }\\n\\n    // makerOrder \\n    function markOrder (address _tokenGet, uint _amountGet,address _tokenGive,uint _amountGive) public {\\n        orderCount +=1;\\n        orders[orderCount] = _Order(orderCount,msg.sender,_tokenGet,_amountGet,_tokenGive,_amountGive,block.timestamp);\\n        emit Order(orderCount,msg.sender,_tokenGet,_amountGet,_tokenGive,_amountGive,block.timestamp);\\n    }\\n\\n    function cancelOrder (uint _id) public {\\n        _Order memory myorder = orders[_id];\\n        require(_id ==myorder.id,'no valid order');\\n        orderCancel[_id] = true;\\n        emit Cancel(_id, msg.sender,myorder.tokenGet,myorder.amountGet,myorder.tokenGive,myorder.amountGive,block.timestamp);\\n    }\\n    // \\u4ea4\\u6613\\u5408\\u7ea6\\n\\n    function fillOrder (uint _id) public {\\n          _Order memory myorder = orders[_id];\\n        require(_id == myorder.id,'no valid order');\\n        orderFill[_id] = true;\\n    \\n       uint feeAmount = myorder.amountGet * (feePercent/100);\\n\\n        tokens[myorder.tokenGet][msg.sender] = tokens[myorder.tokenGet][msg.sender]- myorder.amountGet;\\n        tokens[myorder.tokenGet][myorder.user] = tokens[myorder.tokenGet][myorder.user] + myorder.amountGet;\\n\\n        tokens[myorder.tokenGet][msg.sender] =  tokens[myorder.tokenGet][msg.sender]  -  feeAmount;\\n        tokens[myorder.tokenGet][feeAccount] =  tokens[myorder.tokenGet][feeAccount]  +  feeAmount;\\n       \\n\\n        tokens[myorder.tokenGive][msg.sender] = tokens[myorder.tokenGive][msg.sender] + myorder.amountGive;\\n        tokens[myorder.tokenGive][myorder.user] = tokens[myorder.tokenGive][myorder.user]- myorder.amountGive;\\n\\n\\n\\n        emit Trade(_id, msg.sender,myorder.tokenGet,myorder.amountGet,myorder.tokenGive,myorder.amountGive,block.timestamp);\\n    }\\n}\",\"keccak256\":\"0x1b74c816568337978be107b9d5dd8752f364de2816c9d236bfdb0422211abe91\",\"license\":\"UNLICENSED\"},\"contracts/Token.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.24;\\nimport './Utils.sol';\\n\\ncontract Token is Utils{\\n    /* \\u516c\\u5171\\u53d8\\u91cf */\\n    string public name = ''; //\\u4ee3\\u5e01\\u540d\\u79f0\\n    string public symbol = ''; //\\u4ee3\\u5e01\\u7b26\\u53f7\\n    uint8 public decimals = 0;  //\\u4ee3\\u5e01\\u5355\\u4f4d\\n    uint256 public totalSupply = 10000; //\\u4ee3\\u5e01\\u603b\\u91cf\\n\\n    /*\\u8bb0\\u5f55\\u6240\\u6709\\u4f59\\u989d\\u7684\\u6620\\u5c04*/\\n    mapping (address => uint256) public balanceOf;\\n    mapping (address => mapping (address => uint256)) public allowance;\\n\\n    /* \\u5728\\u533a\\u5757\\u94fe\\u4e0a\\u521b\\u5efa\\u4e00\\u4e2a\\u4e8b\\u4ef6\\uff0c\\u7528\\u4ee5\\u901a\\u77e5\\u5ba2\\u6237\\u7aef*/\\n    event Transfer(address indexed from, address indexed to, uint256 value);  //\\u8f6c\\u5e10\\u901a\\u77e5\\u4e8b\\u4ef6\\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value); //\\u8bbe\\u7f6e\\u5141\\u8bb8\\u7528\\u6237\\u652f\\u4ed8\\u6700\\u5927\\u91d1\\u989d\\u901a\\u77e5\\n\\n    /* \\u521d\\u59cb\\u5316\\u5408\\u7ea6\\uff0c\\u5e76\\u4e14\\u628a\\u521d\\u59cb\\u7684\\u6240\\u6709\\u4ee3\\u5e01\\u90fd\\u7ed9\\u8fd9\\u5408\\u7ea6\\u7684\\u521b\\u5efa\\u8005\\n     * @param tokenName \\u4ee3\\u5e01\\u540d\\u79f0\\n     * @param tokenSymbol \\u4ee3\\u5e01\\u7b26\\u53f7\\n     * @param decimalsUnits \\u4ee3\\u5e01\\u540e\\u9762\\u7684\\u5355\\u4f4d\\uff0c\\u5c0f\\u6570\\u70b9\\u540e\\u9762\\u591a\\u5c11\\u4e2a0\\uff0c\\u4ee5\\u592a\\u5e01\\u4e00\\u6837\\u540e\\u9762\\u662f\\u662f18\\u4e2a0\\n     */\\n    constructor(string memory tokenName, string memory tokenSymbol, uint8 decimalsUnits) {\\n        // require(bytes(tokenName).length > 0 && bytes(tokenSymbol).length > 0); // validate input\\n        name = tokenName;\\n        symbol = tokenSymbol;\\n        decimals = decimalsUnits;\\n        balanceOf[msg.sender] = 10000 * 10 ** decimals;\\n    }\\n\\n    /**\\n     * \\u79c1\\u6709\\u65b9\\u6cd5\\u4ece\\u4e00\\u4e2a\\u5e10\\u6237\\u53d1\\u9001\\u7ed9\\u53e6\\u4e00\\u4e2a\\u5e10\\u6237\\u4ee3\\u5e01\\n     * @param  _from address \\u53d1\\u9001\\u4ee3\\u5e01\\u7684\\u5730\\u5740\\n     * @param  _to address \\u63a5\\u53d7\\u4ee3\\u5e01\\u7684\\u5730\\u5740\\n     * @param  _value uint256 \\u63a5\\u53d7\\u4ee3\\u5e01\\u7684\\u6570\\u91cf\\n     */\\n    function _transfer(address _from, address _to, uint256 _value)\\n      internal\\n      validAddress(_from)\\n      validAddress(_to)\\n    {\\n\\n\\n      //\\u68c0\\u67e5\\u53d1\\u9001\\u8005\\u662f\\u5426\\u62e5\\u6709\\u8db3\\u591f\\u4f59\\u989d\\n      require(balanceOf[_from] >= _value);\\n\\n      //\\u68c0\\u67e5\\u662f\\u5426\\u6ea2\\u51fa\\n      require(balanceOf[_to] + _value > balanceOf[_to]);\\n\\n      //\\u4fdd\\u5b58\\u6570\\u636e\\u7528\\u4e8e\\u540e\\u9762\\u7684\\u5224\\u65ad\\n      uint previousBalances = safeAdd(balanceOf[_from], balanceOf[_to]);\\n\\n      //\\u4ece\\u53d1\\u9001\\u8005\\u51cf\\u6389\\u53d1\\u9001\\u989d\\n      balanceOf[_from] = safeSub(balanceOf[_from], _value);\\n\\n      //\\u7ed9\\u63a5\\u6536\\u8005\\u52a0\\u4e0a\\u76f8\\u540c\\u7684\\u91cf\\n      balanceOf[_to] += safeAdd(balanceOf[_to], _value);\\n\\n      //\\u901a\\u77e5\\u4efb\\u4f55\\u76d1\\u542c\\u8be5\\u4ea4\\u6613\\u7684\\u5ba2\\u6237\\u7aef\\n      emit Transfer(_from, _to, _value);\\n\\n      //\\u5224\\u65ad\\u4e70\\u3001\\u5356\\u53cc\\u65b9\\u7684\\u6570\\u636e\\u662f\\u5426\\u548c\\u8f6c\\u6362\\u524d\\u4e00\\u81f4\\n      assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\\n\\n    }\\n\\n    /**\\n     * \\u4ece\\u4e3b\\u5e10\\u6237\\u5408\\u7ea6\\u8c03\\u7528\\u8005\\u53d1\\u9001\\u7ed9\\u522b\\u4eba\\u4ee3\\u5e01\\n     * @param  _to address \\u63a5\\u53d7\\u4ee3\\u5e01\\u7684\\u5730\\u5740\\n     * @param  _value uint256 \\u63a5\\u53d7\\u4ee3\\u5e01\\u7684\\u6570\\u91cf\\n     */\\n    function transfer(address _to, uint256 _value)\\n      public\\n      validAddress(_to)\\n      returns (bool)\\n    {\\n        _transfer(msg.sender, _to, _value);\\n        return true;\\n    }\\n\\n    /**\\n     * \\u4ece\\u67d0\\u4e2a\\u6307\\u5b9a\\u7684\\u5e10\\u6237\\u4e2d\\uff0c\\u5411\\u53e6\\u4e00\\u4e2a\\u5e10\\u6237\\u53d1\\u9001\\u4ee3\\u5e01\\n     *\\n     * \\u8c03\\u7528\\u8fc7\\u7a0b\\uff0c\\u4f1a\\u68c0\\u67e5\\u8bbe\\u7f6e\\u7684\\u5141\\u8bb8\\u6700\\u5927\\u4ea4\\u6613\\u989d\\n     *\\n     * @param  _from address \\u53d1\\u9001\\u8005\\u5730\\u5740\\n     * @param  _to address \\u63a5\\u53d7\\u8005\\u5730\\u5740\\n     * @param  _value uint256 \\u8981\\u8f6c\\u79fb\\u7684\\u4ee3\\u5e01\\u6570\\u91cf\\n     * @return        \\u662f\\u5426\\u4ea4\\u6613\\u6210\\u529f\\n     */\\n    function transferFrom(address _from, address _to, uint256 _value)\\n        public\\n        validAddress(_from)\\n        validAddress(_to)\\n        returns (bool)\\n    {\\n        //\\u68c0\\u67e5\\u53d1\\u9001\\u8005\\u662f\\u5426\\u62e5\\u6709\\u8db3\\u591f\\u4f59\\u989d\\u652f\\u51fa\\u7684\\u8bbe\\u7f6e\\n        require(_value <= allowance[_from][msg.sender], '-invalid value');   // Check allowance\\n\\n        allowance[_from][msg.sender] -= safeSub(allowance[_from][msg.sender], _value);\\n\\n        _transfer(_from, _to, _value);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * \\u8bbe\\u7f6e\\u5e10\\u6237\\u5141\\u8bb8\\u652f\\u4ed8\\u7684\\u6700\\u5927\\u91d1\\u989d\\n     *\\n     * \\u4e00\\u822c\\u5728\\u667a\\u80fd\\u5408\\u7ea6\\u7684\\u65f6\\u5019\\uff0c\\u907f\\u514d\\u652f\\u4ed8\\u8fc7\\u591a\\uff0c\\u9020\\u6210\\u98ce\\u9669\\n     *\\n     * @param _spender \\u5e10\\u6237\\u5730\\u5740\\n     * @param _value \\u91d1\\u989d\\n     */\\n    function approve(address _spender, uint256 _value)\\n        public\\n        validAddress(_spender)\\n        returns (bool success)\\n    {\\n\\n        require(_value == 0 || allowance[msg.sender][_spender] == 0, 'fail valid');\\n\\n        allowance[msg.sender][_spender] = _value;\\n        emit Approval(msg.sender, _spender, _value);\\n        return true;\\n    }\\n\\n\\n     function allowanceOf(address _add1, address _add2)\\n        public view\\n        returns (uint256)\\n    {\\n        return allowance[_add1][_add2];\\n      \\n    }\\n}\",\"keccak256\":\"0xf826dc7cf72d58e5312c6a118d537de2f418afa44528d9cb3ea08fabbc34b785\",\"license\":\"UNLICENSED\"},\"contracts/Utils.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.24;\\n\\n/*\\n    Utilities & Common Modifiers\\n*/\\ncontract Utils {\\n    // verifies that an amount is greater than zero\\n    modifier greaterThanZero(uint256 _amount) {\\n        require(_amount > 0);\\n        _;\\n    }\\n\\n    // validates an address - currently only checks that it isn't null\\n    modifier validAddress(address _address) {\\n        require(_address != address(0));\\n        _;\\n    }\\n\\n    // verifies that the address is different than this contract address\\n    modifier notThis(address _address) {\\n        require(_address != address(this));\\n        _;\\n    }\\n\\n    // Overflow protected math functions\\n\\n    /**\\n        @dev returns the sum of _x and _y, asserts if the calculation overflows\\n\\n        @param _x   value 1\\n        @param _y   value 2\\n\\n        @return sum\\n    */\\n    function safeAdd(uint256 _x, uint256 _y) internal pure returns (uint256) {\\n        uint256 z = _x + _y;\\n        assert(z >= _x);\\n        return z;\\n    }\\n\\n    /**\\n        @dev returns the difference of _x minus _y, asserts if the subtraction results in a negative number\\n\\n        @param _x   minuend\\n        @param _y   subtrahend\\n\\n        @return difference\\n    */\\n    function safeSub(uint256 _x, uint256 _y) internal pure returns (uint256) {\\n        assert(_x >= _y);\\n        return _x - _y;\\n    }\\n\\n    /**\\n        @dev returns the product of multiplying _x by _y, asserts if the calculation overflows\\n\\n        @param _x   factor 1\\n        @param _y   factor 2\\n\\n        @return product\\n    */\\n    function safeMul(uint256 _x, uint256 _y) internal pure returns (uint256) {\\n        uint256 z = _x * _y;\\n        assert(_x == 0 || z / _x == _y);\\n        return z;\\n    }\\n}\",\"keccak256\":\"0x4732c21e3ad6a53ac4e77dd91c0efb5d1fe202296a821abd1bc967395bc0add9\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620025313803806200253183398181016040528101906200003791906200012b565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600181905550505062000172565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b8826200008b565b9050919050565b620000ca81620000ab565b8114620000d657600080fd5b50565b600081519050620000ea81620000bf565b92915050565b6000819050919050565b6200010581620000f0565b81146200011157600080fd5b50565b6000815190506200012581620000fa565b92915050565b6000806040838503121562000145576200014462000086565b5b60006200015585828601620000d9565b9250506020620001688582860162000114565b9150509250929050565b6123af80620001826000396000f3fe6080604052600436106100e85760003560e01c80637fd6f15c1161008a578063a589e17e11610059578063a589e17e146102b2578063a85c38ef146102db578063c348ac651461031e578063f7888aec1461035b576100e8565b80637fd6f15c1461021757806398ea5fca146102425780639bc896f91461024c5780639e281a9814610289576100e8565b8063508493bc116100c6578063508493bc1461015d578063514fcac71461019a57806365e17c9d146101c357806367b830ad146101ee576100e8565b80632453ffa8146100ed578063338b5dea146101185780633bed33ce14610141575b600080fd5b3480156100f957600080fd5b50610102610398565b60405161010f9190611cf4565b60405180910390f35b34801561012457600080fd5b5061013f600480360381019061013a9190611d9e565b61039e565b005b61015b60048036038101906101569190611dde565b610691565b005b34801561016957600080fd5b50610184600480360381019061017f9190611e0b565b61095c565b6040516101919190611cf4565b60405180910390f35b3480156101a657600080fd5b506101c160048036038101906101bc9190611dde565b610981565b005b3480156101cf57600080fd5b506101d8610b96565b6040516101e59190611e5a565b60405180910390f35b3480156101fa57600080fd5b5061021560048036038101906102109190611dde565b610bba565b005b34801561022357600080fd5b5061022c6114b4565b6040516102399190611cf4565b60405180910390f35b61024a6114ba565b005b34801561025857600080fd5b50610273600480360381019061026e9190611dde565b61167e565b6040516102809190611e90565b60405180910390f35b34801561029557600080fd5b506102b060048036038101906102ab9190611d9e565b61169e565b005b3480156102be57600080fd5b506102d960048036038101906102d49190611eab565b6119a1565b005b3480156102e757600080fd5b5061030260048036038101906102fd9190611dde565b611b92565b6040516103159796959493929190611f12565b60405180910390f35b34801561032a57600080fd5b5061034560048036038101906103409190611dde565b611c34565b6040516103529190611e90565b60405180910390f35b34801561036757600080fd5b50610382600480360381019061037d9190611e0b565b611c54565b60405161038f9190611cf4565b60405180910390f35b60045481565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361040d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040490611fde565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161044a93929190611ffe565b6020604051808303816000875af1158015610469573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048d9190612061565b6104cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c3906120da565b60405180910390fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105549190612129565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f39797eb4919bc44f5ed731218620cdc53c40bdb411b7dcb529ba8e531b8f003c823383600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610685949392919061215d565b60405180910390a15050565b80600260008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610750576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610747906121ee565b60405180910390fd5b80600260008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107d8919061220e565b600260008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561089e573d6000803e3d6000fd5b507ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb56760003383600260008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610951949392919061215d565b60405180910390a150565b6002602052816000526040600020602052806000526040600020600091509150505481565b6000600360008381526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050905080600001518214610b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0a9061228e565b60405180910390fd5b60016005600084815260200190815260200160002060006101000a81548160ff0219169083151502179055507f77de1da0be5f2d3b110d05c6694e5c4ff2d9da7cd23d84353ecf78c7b5acec6182338360400151846060015185608001518660a0015142604051610b8a9796959493929190611f12565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360008381526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050905080600001518214610d4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d439061228e565b60405180910390fd5b60016006600084815260200190815260200160002060006101000a81548160ff02191690831515021790555060006064600154610d8991906122dd565b8260600151610d98919061230e565b9050816060015160026000846040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e2a919061220e565b60026000846040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816060015160026000846040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f429190612129565b60026000846040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508060026000846040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611056919061220e565b60026000846040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508060026000846040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111879190612129565b60026000846040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160a0015160026000846080015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112bc9190612129565b60026000846080015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160a0015160026000846080015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113d4919061220e565b60026000846080015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507faba0fc968824c4949185cfdd55a197a4d41616a98cc2d97fd34224ebcdf7674483338460400151856060015186608001518760a00151426040516114a79796959493929190611f12565b60405180910390a1505050565b60015481565b34600260008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115429190612129565b600260008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f39797eb4919bc44f5ed731218620cdc53c40bdb411b7dcb529ba8e531b8f003c60003334600260008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051611674949392919061215d565b60405180910390a1565b60056020528060005260406000206000915054906101000a900460ff1681565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561175d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611754906121ee565b60405180910390fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117e5919061220e565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016118a0929190612350565b6020604051808303816000875af11580156118bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e39190612061565b507ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567823383600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051611995949392919061215d565b60405180910390a15050565b6001600460008282546119b49190612129565b925050819055506040518060e0016040528060045481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001428152506003600060045481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c082015181600601559050507f9d33853d43e3607b4cc01fdc78338ff2dca6fef7db9232dae6d3eb55fbc3b109600454338686868642604051611b849796959493929190611f12565b60405180910390a150505050565b60036020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060154905087565b60066020528060005260406000206000915054906101000a900460ff1681565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000819050919050565b611cee81611cdb565b82525050565b6000602082019050611d096000830184611ce5565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d3f82611d14565b9050919050565b611d4f81611d34565b8114611d5a57600080fd5b50565b600081359050611d6c81611d46565b92915050565b611d7b81611cdb565b8114611d8657600080fd5b50565b600081359050611d9881611d72565b92915050565b60008060408385031215611db557611db4611d0f565b5b6000611dc385828601611d5d565b9250506020611dd485828601611d89565b9150509250929050565b600060208284031215611df457611df3611d0f565b5b6000611e0284828501611d89565b91505092915050565b60008060408385031215611e2257611e21611d0f565b5b6000611e3085828601611d5d565b9250506020611e4185828601611d5d565b9150509250929050565b611e5481611d34565b82525050565b6000602082019050611e6f6000830184611e4b565b92915050565b60008115159050919050565b611e8a81611e75565b82525050565b6000602082019050611ea56000830184611e81565b92915050565b60008060008060808587031215611ec557611ec4611d0f565b5b6000611ed387828801611d5d565b9450506020611ee487828801611d89565b9350506040611ef587828801611d5d565b9250506060611f0687828801611d89565b91505092959194509250565b600060e082019050611f27600083018a611ce5565b611f346020830189611e4b565b611f416040830188611e4b565b611f4e6060830187611ce5565b611f5b6080830186611e4b565b611f6860a0830185611ce5565b611f7560c0830184611ce5565b98975050505050505050565b600082825260208201905092915050565b7f756e76616c696420746f6b656e00000000000000000000000000000000000000600082015250565b6000611fc8600d83611f81565b9150611fd382611f92565b602082019050919050565b60006020820190508181036000830152611ff781611fbb565b9050919050565b60006060820190506120136000830186611e4b565b6120206020830185611e4b565b61202d6040830184611ce5565b949350505050565b61203e81611e75565b811461204957600080fd5b50565b60008151905061205b81612035565b92915050565b60006020828403121561207757612076611d0f565b5b60006120858482850161204c565b91505092915050565b7f7472616e73206661696c00000000000000000000000000000000000000000000600082015250565b60006120c4600a83611f81565b91506120cf8261208e565b602082019050919050565b600060208201905081810360008301526120f3816120b7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061213482611cdb565b915061213f83611cdb565b9250828201905080821115612157576121566120fa565b5b92915050565b60006080820190506121726000830187611e4b565b61217f6020830186611e4b565b61218c6040830185611ce5565b6121996060830184611ce5565b95945050505050565b7f616d6f756e74206973206e6f20656e6f75676820000000000000000000000000600082015250565b60006121d8601483611f81565b91506121e3826121a2565b602082019050919050565b60006020820190508181036000830152612207816121cb565b9050919050565b600061221982611cdb565b915061222483611cdb565b925082820390508181111561223c5761223b6120fa565b5b92915050565b7f6e6f2076616c6964206f72646572000000000000000000000000000000000000600082015250565b6000612278600e83611f81565b915061228382612242565b602082019050919050565b600060208201905081810360008301526122a78161226b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006122e882611cdb565b91506122f383611cdb565b925082612303576123026122ae565b5b828204905092915050565b600061231982611cdb565b915061232483611cdb565b925082820261233281611cdb565b91508282048414831517612349576123486120fa565b5b5092915050565b60006040820190506123656000830185611e4b565b6123726020830184611ce5565b939250505056fea2646970667358221220d311bb335a7a205e85371788725c851f26110cd92ae93fa948b25b44d1fdca5d64736f6c63430008180033",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c80637fd6f15c1161008a578063a589e17e11610059578063a589e17e146102b2578063a85c38ef146102db578063c348ac651461031e578063f7888aec1461035b576100e8565b80637fd6f15c1461021757806398ea5fca146102425780639bc896f91461024c5780639e281a9814610289576100e8565b8063508493bc116100c6578063508493bc1461015d578063514fcac71461019a57806365e17c9d146101c357806367b830ad146101ee576100e8565b80632453ffa8146100ed578063338b5dea146101185780633bed33ce14610141575b600080fd5b3480156100f957600080fd5b50610102610398565b60405161010f9190611cf4565b60405180910390f35b34801561012457600080fd5b5061013f600480360381019061013a9190611d9e565b61039e565b005b61015b60048036038101906101569190611dde565b610691565b005b34801561016957600080fd5b50610184600480360381019061017f9190611e0b565b61095c565b6040516101919190611cf4565b60405180910390f35b3480156101a657600080fd5b506101c160048036038101906101bc9190611dde565b610981565b005b3480156101cf57600080fd5b506101d8610b96565b6040516101e59190611e5a565b60405180910390f35b3480156101fa57600080fd5b5061021560048036038101906102109190611dde565b610bba565b005b34801561022357600080fd5b5061022c6114b4565b6040516102399190611cf4565b60405180910390f35b61024a6114ba565b005b34801561025857600080fd5b50610273600480360381019061026e9190611dde565b61167e565b6040516102809190611e90565b60405180910390f35b34801561029557600080fd5b506102b060048036038101906102ab9190611d9e565b61169e565b005b3480156102be57600080fd5b506102d960048036038101906102d49190611eab565b6119a1565b005b3480156102e757600080fd5b5061030260048036038101906102fd9190611dde565b611b92565b6040516103159796959493929190611f12565b60405180910390f35b34801561032a57600080fd5b5061034560048036038101906103409190611dde565b611c34565b6040516103529190611e90565b60405180910390f35b34801561036757600080fd5b50610382600480360381019061037d9190611e0b565b611c54565b60405161038f9190611cf4565b60405180910390f35b60045481565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361040d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040490611fde565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161044a93929190611ffe565b6020604051808303816000875af1158015610469573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048d9190612061565b6104cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c3906120da565b60405180910390fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105549190612129565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f39797eb4919bc44f5ed731218620cdc53c40bdb411b7dcb529ba8e531b8f003c823383600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610685949392919061215d565b60405180910390a15050565b80600260008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610750576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610747906121ee565b60405180910390fd5b80600260008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107d8919061220e565b600260008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561089e573d6000803e3d6000fd5b507ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb56760003383600260008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610951949392919061215d565b60405180910390a150565b6002602052816000526040600020602052806000526040600020600091509150505481565b6000600360008381526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050905080600001518214610b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0a9061228e565b60405180910390fd5b60016005600084815260200190815260200160002060006101000a81548160ff0219169083151502179055507f77de1da0be5f2d3b110d05c6694e5c4ff2d9da7cd23d84353ecf78c7b5acec6182338360400151846060015185608001518660a0015142604051610b8a9796959493929190611f12565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360008381526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152602001600682015481525050905080600001518214610d4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d439061228e565b60405180910390fd5b60016006600084815260200190815260200160002060006101000a81548160ff02191690831515021790555060006064600154610d8991906122dd565b8260600151610d98919061230e565b9050816060015160026000846040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e2a919061220e565b60026000846040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816060015160026000846040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f429190612129565b60026000846040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508060026000846040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611056919061220e565b60026000846040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508060026000846040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111879190612129565b60026000846040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160a0015160026000846080015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112bc9190612129565b60026000846080015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160a0015160026000846080015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113d4919061220e565b60026000846080015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507faba0fc968824c4949185cfdd55a197a4d41616a98cc2d97fd34224ebcdf7674483338460400151856060015186608001518760a00151426040516114a79796959493929190611f12565b60405180910390a1505050565b60015481565b34600260008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115429190612129565b600260008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f39797eb4919bc44f5ed731218620cdc53c40bdb411b7dcb529ba8e531b8f003c60003334600260008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051611674949392919061215d565b60405180910390a1565b60056020528060005260406000206000915054906101000a900460ff1681565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561175d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611754906121ee565b60405180910390fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117e5919061220e565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016118a0929190612350565b6020604051808303816000875af11580156118bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e39190612061565b507ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567823383600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051611995949392919061215d565b60405180910390a15050565b6001600460008282546119b49190612129565b925050819055506040518060e0016040528060045481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001428152506003600060045481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c082015181600601559050507f9d33853d43e3607b4cc01fdc78338ff2dca6fef7db9232dae6d3eb55fbc3b109600454338686868642604051611b849796959493929190611f12565b60405180910390a150505050565b60036020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060154905087565b60066020528060005260406000206000915054906101000a900460ff1681565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000819050919050565b611cee81611cdb565b82525050565b6000602082019050611d096000830184611ce5565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d3f82611d14565b9050919050565b611d4f81611d34565b8114611d5a57600080fd5b50565b600081359050611d6c81611d46565b92915050565b611d7b81611cdb565b8114611d8657600080fd5b50565b600081359050611d9881611d72565b92915050565b60008060408385031215611db557611db4611d0f565b5b6000611dc385828601611d5d565b9250506020611dd485828601611d89565b9150509250929050565b600060208284031215611df457611df3611d0f565b5b6000611e0284828501611d89565b91505092915050565b60008060408385031215611e2257611e21611d0f565b5b6000611e3085828601611d5d565b9250506020611e4185828601611d5d565b9150509250929050565b611e5481611d34565b82525050565b6000602082019050611e6f6000830184611e4b565b92915050565b60008115159050919050565b611e8a81611e75565b82525050565b6000602082019050611ea56000830184611e81565b92915050565b60008060008060808587031215611ec557611ec4611d0f565b5b6000611ed387828801611d5d565b9450506020611ee487828801611d89565b9350506040611ef587828801611d5d565b9250506060611f0687828801611d89565b91505092959194509250565b600060e082019050611f27600083018a611ce5565b611f346020830189611e4b565b611f416040830188611e4b565b611f4e6060830187611ce5565b611f5b6080830186611e4b565b611f6860a0830185611ce5565b611f7560c0830184611ce5565b98975050505050505050565b600082825260208201905092915050565b7f756e76616c696420746f6b656e00000000000000000000000000000000000000600082015250565b6000611fc8600d83611f81565b9150611fd382611f92565b602082019050919050565b60006020820190508181036000830152611ff781611fbb565b9050919050565b60006060820190506120136000830186611e4b565b6120206020830185611e4b565b61202d6040830184611ce5565b949350505050565b61203e81611e75565b811461204957600080fd5b50565b60008151905061205b81612035565b92915050565b60006020828403121561207757612076611d0f565b5b60006120858482850161204c565b91505092915050565b7f7472616e73206661696c00000000000000000000000000000000000000000000600082015250565b60006120c4600a83611f81565b91506120cf8261208e565b602082019050919050565b600060208201905081810360008301526120f3816120b7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061213482611cdb565b915061213f83611cdb565b9250828201905080821115612157576121566120fa565b5b92915050565b60006080820190506121726000830187611e4b565b61217f6020830186611e4b565b61218c6040830185611ce5565b6121996060830184611ce5565b95945050505050565b7f616d6f756e74206973206e6f20656e6f75676820000000000000000000000000600082015250565b60006121d8601483611f81565b91506121e3826121a2565b602082019050919050565b60006020820190508181036000830152612207816121cb565b9050919050565b600061221982611cdb565b915061222483611cdb565b925082820390508181111561223c5761223b6120fa565b5b92915050565b7f6e6f2076616c6964206f72646572000000000000000000000000000000000000600082015250565b6000612278600e83611f81565b915061228382612242565b602082019050919050565b600060208201905081810360008301526122a78161226b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006122e882611cdb565b91506122f383611cdb565b925082612303576123026122ae565b5b828204905092915050565b600061231982611cdb565b915061232483611cdb565b925082820261233281611cdb565b91508282048414831517612349576123486120fa565b5b5092915050565b60006040820190506123656000830185611e4b565b6123726020830184611ce5565b939250505056fea2646970667358221220d311bb335a7a205e85371788725c851f26110cd92ae93fa948b25b44d1fdca5d64736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4,
        "contract": "contracts/Exchange.sol:Exchange",
        "label": "feeAccount",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 6,
        "contract": "contracts/Exchange.sol:Exchange",
        "label": "feePercent",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 33,
        "contract": "contracts/Exchange.sol:Exchange",
        "label": "tokens",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 38,
        "contract": "contracts/Exchange.sol:Exchange",
        "label": "orders",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(_Order)27_storage)"
      },
      {
        "astId": 40,
        "contract": "contracts/Exchange.sol:Exchange",
        "label": "orderCount",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 44,
        "contract": "contracts/Exchange.sol:Exchange",
        "label": "orderCancel",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 48,
        "contract": "contracts/Exchange.sol:Exchange",
        "label": "orderFill",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(_Order)27_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Exchange._Order)",
        "numberOfBytes": "32",
        "value": "t_struct(_Order)27_storage"
      },
      "t_struct(_Order)27_storage": {
        "encoding": "inplace",
        "label": "struct Exchange._Order",
        "members": [
          {
            "astId": 14,
            "contract": "contracts/Exchange.sol:Exchange",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 16,
            "contract": "contracts/Exchange.sol:Exchange",
            "label": "user",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 18,
            "contract": "contracts/Exchange.sol:Exchange",
            "label": "tokenGet",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 20,
            "contract": "contracts/Exchange.sol:Exchange",
            "label": "amountGet",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 22,
            "contract": "contracts/Exchange.sol:Exchange",
            "label": "tokenGive",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 24,
            "contract": "contracts/Exchange.sol:Exchange",
            "label": "amountGive",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 26,
            "contract": "contracts/Exchange.sol:Exchange",
            "label": "timestamp",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}