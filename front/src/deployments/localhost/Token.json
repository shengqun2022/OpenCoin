{
  "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimalsUnits",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_add1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_add2",
          "type": "address"
        }
      ],
      "name": "allowanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb8d0005cab8aacd80aecde4b7f2f8ccb61181c10dd5e81bde927640d336a176d",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
    "transactionIndex": 0,
    "gasUsed": "1216588",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x6e9278d28166d9d45bffffb93ff34e33a99bd1dda8bf03deedc9ed7b43903374",
    "transactionHash": "0xb8d0005cab8aacd80aecde4b7f2f8ccb61181c10dd5e81bde927640d336a176d",
    "logs": [],
    "blockNumber": 24,
    "cumulativeGasUsed": "1216588",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "MyToken",
    "ZLD",
    18
  ],
  "numDeployments": 2,
  "solcInputHash": "9abb7f6a077a34fc56f9f113a4c157fd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimalsUnits\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_add1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_add2\",\"type\":\"address\"}],\"name\":\"allowanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"params\":{\"_spender\":\"\\u5e10\\u6237\\u5730\\u5740\",\"_value\":\"\\u91d1\\u989d\"}},\"transfer(address,uint256)\":{\"params\":{\"_to\":\"address \\u63a5\\u53d7\\u4ee3\\u5e01\\u7684\\u5730\\u5740\",\"_value\":\"uint256 \\u63a5\\u53d7\\u4ee3\\u5e01\\u7684\\u6570\\u91cf\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"_from\":\"address \\u53d1\\u9001\\u8005\\u5730\\u5740\",\"_to\":\"address \\u63a5\\u53d7\\u8005\\u5730\\u5740\",\"_value\":\"uint256 \\u8981\\u8f6c\\u79fb\\u7684\\u4ee3\\u5e01\\u6570\\u91cf\"},\"returns\":{\"_0\":\"\\u662f\\u5426\\u4ea4\\u6613\\u6210\\u529f\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"\\u8bbe\\u7f6e\\u5e10\\u6237\\u5141\\u8bb8\\u652f\\u4ed8\\u7684\\u6700\\u5927\\u91d1\\u989d \\u4e00\\u822c\\u5728\\u667a\\u80fd\\u5408\\u7ea6\\u7684\\u65f6\\u5019\\uff0c\\u907f\\u514d\\u652f\\u4ed8\\u8fc7\\u591a\\uff0c\\u9020\\u6210\\u98ce\\u9669\"},\"transfer(address,uint256)\":{\"notice\":\"\\u4ece\\u4e3b\\u5e10\\u6237\\u5408\\u7ea6\\u8c03\\u7528\\u8005\\u53d1\\u9001\\u7ed9\\u522b\\u4eba\\u4ee3\\u5e01\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"\\u4ece\\u67d0\\u4e2a\\u6307\\u5b9a\\u7684\\u5e10\\u6237\\u4e2d\\uff0c\\u5411\\u53e6\\u4e00\\u4e2a\\u5e10\\u6237\\u53d1\\u9001\\u4ee3\\u5e01 \\u8c03\\u7528\\u8fc7\\u7a0b\\uff0c\\u4f1a\\u68c0\\u67e5\\u8bbe\\u7f6e\\u7684\\u5141\\u8bb8\\u6700\\u5927\\u4ea4\\u6613\\u989d\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Token.sol\":\"Token\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Token.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.24;\\nimport './Utils.sol';\\n\\ncontract Token is Utils{\\n    /* \\u516c\\u5171\\u53d8\\u91cf */\\n    string public name = ''; //\\u4ee3\\u5e01\\u540d\\u79f0\\n    string public symbol = ''; //\\u4ee3\\u5e01\\u7b26\\u53f7\\n    uint8 public decimals = 0;  //\\u4ee3\\u5e01\\u5355\\u4f4d\\n    uint256 public totalSupply = 10000; //\\u4ee3\\u5e01\\u603b\\u91cf\\n\\n    /*\\u8bb0\\u5f55\\u6240\\u6709\\u4f59\\u989d\\u7684\\u6620\\u5c04*/\\n    mapping (address => uint256) public balanceOf;\\n    mapping (address => mapping (address => uint256)) public allowance;\\n\\n    /* \\u5728\\u533a\\u5757\\u94fe\\u4e0a\\u521b\\u5efa\\u4e00\\u4e2a\\u4e8b\\u4ef6\\uff0c\\u7528\\u4ee5\\u901a\\u77e5\\u5ba2\\u6237\\u7aef*/\\n    event Transfer(address indexed from, address indexed to, uint256 value);  //\\u8f6c\\u5e10\\u901a\\u77e5\\u4e8b\\u4ef6\\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value); //\\u8bbe\\u7f6e\\u5141\\u8bb8\\u7528\\u6237\\u652f\\u4ed8\\u6700\\u5927\\u91d1\\u989d\\u901a\\u77e5\\n\\n    /* \\u521d\\u59cb\\u5316\\u5408\\u7ea6\\uff0c\\u5e76\\u4e14\\u628a\\u521d\\u59cb\\u7684\\u6240\\u6709\\u4ee3\\u5e01\\u90fd\\u7ed9\\u8fd9\\u5408\\u7ea6\\u7684\\u521b\\u5efa\\u8005\\n     * @param tokenName \\u4ee3\\u5e01\\u540d\\u79f0\\n     * @param tokenSymbol \\u4ee3\\u5e01\\u7b26\\u53f7\\n     * @param decimalsUnits \\u4ee3\\u5e01\\u540e\\u9762\\u7684\\u5355\\u4f4d\\uff0c\\u5c0f\\u6570\\u70b9\\u540e\\u9762\\u591a\\u5c11\\u4e2a0\\uff0c\\u4ee5\\u592a\\u5e01\\u4e00\\u6837\\u540e\\u9762\\u662f\\u662f18\\u4e2a0\\n     */\\n    constructor(string memory tokenName, string memory tokenSymbol, uint8 decimalsUnits) {\\n        // require(bytes(tokenName).length > 0 && bytes(tokenSymbol).length > 0); // validate input\\n        name = tokenName;\\n        symbol = tokenSymbol;\\n        decimals = decimalsUnits;\\n        balanceOf[msg.sender] = 10000 * 10 ** decimals;\\n    }\\n\\n    /**\\n     * \\u79c1\\u6709\\u65b9\\u6cd5\\u4ece\\u4e00\\u4e2a\\u5e10\\u6237\\u53d1\\u9001\\u7ed9\\u53e6\\u4e00\\u4e2a\\u5e10\\u6237\\u4ee3\\u5e01\\n     * @param  _from address \\u53d1\\u9001\\u4ee3\\u5e01\\u7684\\u5730\\u5740\\n     * @param  _to address \\u63a5\\u53d7\\u4ee3\\u5e01\\u7684\\u5730\\u5740\\n     * @param  _value uint256 \\u63a5\\u53d7\\u4ee3\\u5e01\\u7684\\u6570\\u91cf\\n     */\\n    function _transfer(address _from, address _to, uint256 _value)\\n      internal\\n      validAddress(_from)\\n      validAddress(_to)\\n    {\\n\\n\\n      //\\u68c0\\u67e5\\u53d1\\u9001\\u8005\\u662f\\u5426\\u62e5\\u6709\\u8db3\\u591f\\u4f59\\u989d\\n      require(balanceOf[_from] >= _value);\\n\\n      //\\u68c0\\u67e5\\u662f\\u5426\\u6ea2\\u51fa\\n      require(balanceOf[_to] + _value > balanceOf[_to]);\\n\\n      //\\u4fdd\\u5b58\\u6570\\u636e\\u7528\\u4e8e\\u540e\\u9762\\u7684\\u5224\\u65ad\\n      uint previousBalances = safeAdd(balanceOf[_from], balanceOf[_to]);\\n\\n      //\\u4ece\\u53d1\\u9001\\u8005\\u51cf\\u6389\\u53d1\\u9001\\u989d\\n      balanceOf[_from] = safeSub(balanceOf[_from], _value);\\n\\n      //\\u7ed9\\u63a5\\u6536\\u8005\\u52a0\\u4e0a\\u76f8\\u540c\\u7684\\u91cf\\n      balanceOf[_to] += safeAdd(balanceOf[_to], _value);\\n\\n      //\\u901a\\u77e5\\u4efb\\u4f55\\u76d1\\u542c\\u8be5\\u4ea4\\u6613\\u7684\\u5ba2\\u6237\\u7aef\\n      emit Transfer(_from, _to, _value);\\n\\n      //\\u5224\\u65ad\\u4e70\\u3001\\u5356\\u53cc\\u65b9\\u7684\\u6570\\u636e\\u662f\\u5426\\u548c\\u8f6c\\u6362\\u524d\\u4e00\\u81f4\\n      assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\\n\\n    }\\n\\n    /**\\n     * \\u4ece\\u4e3b\\u5e10\\u6237\\u5408\\u7ea6\\u8c03\\u7528\\u8005\\u53d1\\u9001\\u7ed9\\u522b\\u4eba\\u4ee3\\u5e01\\n     * @param  _to address \\u63a5\\u53d7\\u4ee3\\u5e01\\u7684\\u5730\\u5740\\n     * @param  _value uint256 \\u63a5\\u53d7\\u4ee3\\u5e01\\u7684\\u6570\\u91cf\\n     */\\n    function transfer(address _to, uint256 _value)\\n      public\\n      validAddress(_to)\\n      returns (bool)\\n    {\\n        _transfer(msg.sender, _to, _value);\\n        return true;\\n    }\\n\\n    /**\\n     * \\u4ece\\u67d0\\u4e2a\\u6307\\u5b9a\\u7684\\u5e10\\u6237\\u4e2d\\uff0c\\u5411\\u53e6\\u4e00\\u4e2a\\u5e10\\u6237\\u53d1\\u9001\\u4ee3\\u5e01\\n     *\\n     * \\u8c03\\u7528\\u8fc7\\u7a0b\\uff0c\\u4f1a\\u68c0\\u67e5\\u8bbe\\u7f6e\\u7684\\u5141\\u8bb8\\u6700\\u5927\\u4ea4\\u6613\\u989d\\n     *\\n     * @param  _from address \\u53d1\\u9001\\u8005\\u5730\\u5740\\n     * @param  _to address \\u63a5\\u53d7\\u8005\\u5730\\u5740\\n     * @param  _value uint256 \\u8981\\u8f6c\\u79fb\\u7684\\u4ee3\\u5e01\\u6570\\u91cf\\n     * @return        \\u662f\\u5426\\u4ea4\\u6613\\u6210\\u529f\\n     */\\n    function transferFrom(address _from, address _to, uint256 _value)\\n        public\\n        validAddress(_from)\\n        validAddress(_to)\\n        returns (bool)\\n    {\\n        //\\u68c0\\u67e5\\u53d1\\u9001\\u8005\\u662f\\u5426\\u62e5\\u6709\\u8db3\\u591f\\u4f59\\u989d\\u652f\\u51fa\\u7684\\u8bbe\\u7f6e\\n        require(_value <= allowance[_from][msg.sender], '-invalid value');   // Check allowance\\n\\n        allowance[_from][msg.sender] -= safeSub(allowance[_from][msg.sender], _value);\\n\\n        _transfer(_from, _to, _value);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * \\u8bbe\\u7f6e\\u5e10\\u6237\\u5141\\u8bb8\\u652f\\u4ed8\\u7684\\u6700\\u5927\\u91d1\\u989d\\n     *\\n     * \\u4e00\\u822c\\u5728\\u667a\\u80fd\\u5408\\u7ea6\\u7684\\u65f6\\u5019\\uff0c\\u907f\\u514d\\u652f\\u4ed8\\u8fc7\\u591a\\uff0c\\u9020\\u6210\\u98ce\\u9669\\n     *\\n     * @param _spender \\u5e10\\u6237\\u5730\\u5740\\n     * @param _value \\u91d1\\u989d\\n     */\\n    function approve(address _spender, uint256 _value)\\n        public\\n        validAddress(_spender)\\n        returns (bool success)\\n    {\\n\\n        require(_value == 0 || allowance[msg.sender][_spender] == 0, 'fail valid');\\n\\n        allowance[msg.sender][_spender] = _value;\\n        emit Approval(msg.sender, _spender, _value);\\n        return true;\\n    }\\n\\n\\n     function allowanceOf(address _add1, address _add2)\\n        public view\\n        returns (uint256)\\n    {\\n        return allowance[_add1][_add2];\\n      \\n    }\\n}\",\"keccak256\":\"0xf826dc7cf72d58e5312c6a118d537de2f418afa44528d9cb3ea08fabbc34b785\",\"license\":\"UNLICENSED\"},\"contracts/Utils.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.24;\\n\\n/*\\n    Utilities & Common Modifiers\\n*/\\ncontract Utils {\\n    // verifies that an amount is greater than zero\\n    modifier greaterThanZero(uint256 _amount) {\\n        require(_amount > 0);\\n        _;\\n    }\\n\\n    // validates an address - currently only checks that it isn't null\\n    modifier validAddress(address _address) {\\n        require(_address != address(0));\\n        _;\\n    }\\n\\n    // verifies that the address is different than this contract address\\n    modifier notThis(address _address) {\\n        require(_address != address(this));\\n        _;\\n    }\\n\\n    // Overflow protected math functions\\n\\n    /**\\n        @dev returns the sum of _x and _y, asserts if the calculation overflows\\n\\n        @param _x   value 1\\n        @param _y   value 2\\n\\n        @return sum\\n    */\\n    function safeAdd(uint256 _x, uint256 _y) internal pure returns (uint256) {\\n        uint256 z = _x + _y;\\n        assert(z >= _x);\\n        return z;\\n    }\\n\\n    /**\\n        @dev returns the difference of _x minus _y, asserts if the subtraction results in a negative number\\n\\n        @param _x   minuend\\n        @param _y   subtrahend\\n\\n        @return difference\\n    */\\n    function safeSub(uint256 _x, uint256 _y) internal pure returns (uint256) {\\n        assert(_x >= _y);\\n        return _x - _y;\\n    }\\n\\n    /**\\n        @dev returns the product of multiplying _x by _y, asserts if the calculation overflows\\n\\n        @param _x   factor 1\\n        @param _y   factor 2\\n\\n        @return product\\n    */\\n    function safeMul(uint256 _x, uint256 _y) internal pure returns (uint256) {\\n        uint256 z = _x * _y;\\n        assert(_x == 0 || z / _x == _y);\\n        return z;\\n    }\\n}\",\"keccak256\":\"0x4732c21e3ad6a53ac4e77dd91c0efb5d1fe202296a821abd1bc967395bc0add9\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60806040526040518060200160405280600081525060009081620000249190620003cd565b506040518060200160405280600081525060019081620000459190620003cd565b506000600260006101000a81548160ff021916908360ff1602179055506127106003553480156200007557600080fd5b5060405162001b7b38038062001b7b83398181016040528101906200009b919062000656565b8260009081620000ac9190620003cd565b508160019081620000be9190620003cd565b5080600260006101000a81548160ff021916908360ff160217905550600260009054906101000a900460ff16600a620000f8919062000873565b612710620001079190620008c4565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050506200090f565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620001d557607f821691505b602082108103620001eb57620001ea6200018d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000216565b62000261868362000216565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002ae620002a8620002a28462000279565b62000283565b62000279565b9050919050565b6000819050919050565b620002ca836200028d565b620002e2620002d982620002b5565b84845462000223565b825550505050565b600090565b620002f9620002ea565b62000306818484620002bf565b505050565b5b818110156200032e5762000322600082620002ef565b6001810190506200030c565b5050565b601f8211156200037d576200034781620001f1565b620003528462000206565b8101602085101562000362578190505b6200037a620003718562000206565b8301826200030b565b50505b505050565b600082821c905092915050565b6000620003a26000198460080262000382565b1980831691505092915050565b6000620003bd83836200038f565b9150826002028217905092915050565b620003d88262000153565b67ffffffffffffffff811115620003f457620003f36200015e565b5b620004008254620001bc565b6200040d82828562000332565b600060209050601f83116001811462000445576000841562000430578287015190505b6200043c8582620003af565b865550620004ac565b601f1984166200045586620001f1565b60005b828110156200047f5784890151825560018201915060208501945060208101905062000458565b868310156200049f57848901516200049b601f8916826200038f565b8355505b6001600288020188555050505b505050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b620004ee82620004d2565b810181811067ffffffffffffffff8211171562000510576200050f6200015e565b5b80604052505050565b600062000525620004b4565b9050620005338282620004e3565b919050565b600067ffffffffffffffff8211156200055657620005556200015e565b5b6200056182620004d2565b9050602081019050919050565b60005b838110156200058e57808201518184015260208101905062000571565b60008484015250505050565b6000620005b1620005ab8462000538565b62000519565b905082815260208101848484011115620005d057620005cf620004cd565b5b620005dd8482856200056e565b509392505050565b600082601f830112620005fd57620005fc620004c8565b5b81516200060f8482602086016200059a565b91505092915050565b600060ff82169050919050565b620006308162000618565b81146200063c57600080fd5b50565b600081519050620006508162000625565b92915050565b600080600060608486031215620006725762000671620004be565b5b600084015167ffffffffffffffff811115620006935762000692620004c3565b5b620006a186828701620005e5565b935050602084015167ffffffffffffffff811115620006c557620006c4620004c3565b5b620006d386828701620005e5565b9250506040620006e6868287016200063f565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156200077e57808604811115620007565762000755620006f0565b5b6001851615620007665780820291505b808102905062000776856200071f565b945062000736565b94509492505050565b6000826200079957600190506200086c565b81620007a957600090506200086c565b8160018114620007c25760028114620007cd5762000803565b60019150506200086c565b60ff841115620007e257620007e1620006f0565b5b8360020a915084821115620007fc57620007fb620006f0565b5b506200086c565b5060208310610133831016604e8410600b84101617156200083d5782820a905083811115620008375762000836620006f0565b5b6200086c565b6200084c84848460016200072c565b92509050818404811115620008665762000865620006f0565b5b81810290505b9392505050565b6000620008808262000279565b91506200088d8362000618565b9250620008bc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000787565b905092915050565b6000620008d18262000279565b9150620008de8362000279565b9250828202620008ee8162000279565b91508282048414831517620009085762000907620006f0565b5b5092915050565b61125c806200091f6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063313ce56711610066578063313ce5671461016f57806370a082311461018d57806395d89b41146101bd578063a9059cbb146101db578063dd62ed3e1461020b5761009e565b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100f15780631a46ec821461010f57806323b872dd1461013f575b600080fd5b6100ab61023b565b6040516100b89190610dd6565b60405180910390f35b6100db60048036038101906100d69190610e91565b6102c9565b6040516100e89190610eec565b60405180910390f35b6100f96104c0565b6040516101069190610f16565b60405180910390f35b61012960048036038101906101249190610f31565b6104c6565b6040516101369190610f16565b60405180910390f35b61015960048036038101906101549190610f71565b61054d565b6040516101669190610eec565b60405180910390f35b6101776107b2565b6040516101849190610fe0565b60405180910390f35b6101a760048036038101906101a29190610ffb565b6107c5565b6040516101b49190610f16565b60405180910390f35b6101c56107dd565b6040516101d29190610dd6565b60405180910390f35b6101f560048036038101906101f09190610e91565b61086b565b6040516102029190610eec565b60405180910390f35b61022560048036038101906102209190610f31565b6108bd565b6040516102329190610f16565b60405180910390f35b6000805461024890611057565b80601f016020809104026020016040519081016040528092919081815260200182805461027490611057565b80156102c15780601f10610296576101008083540402835291602001916102c1565b820191906000526020600020905b8154815290600101906020018083116102a457829003601f168201915b505050505081565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361030557600080fd5b600083148061039057506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b6103cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c6906110d4565b60405180910390fd5b82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516104ad9190610f16565b60405180910390a3600191505092915050565b60035481565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600083600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361058957600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105c357600080fd5b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054841115610682576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067990611140565b60405180910390fd5b610708600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054856108e2565b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610793919061118f565b925050819055506107a5868686610909565b6001925050509392505050565b600260009054906101000a900460ff1681565b60046020528060005260406000206000915090505481565b600180546107ea90611057565b80601f016020809104026020016040519081016040528092919081815260200182805461081690611057565b80156108635780601f1061083857610100808354040283529160200191610863565b820191906000526020600020905b81548152906001019060200180831161084657829003601f168201915b505050505081565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108a757600080fd5b6108b2338585610909565b600191505092915050565b6005602052816000526040600020602052806000526040600020600091509150505481565b6000818310156108f5576108f46111c3565b5b8183610901919061118f565b905092915050565b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361094357600080fd5b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361097d57600080fd5b82600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156109c957600080fd5b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a5491906111f2565b11610a5e57600080fd5b6000610ae8600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d1a565b9050610b33600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054856108e2565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610bbf600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205485610d1a565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c0d91906111f2565b925050819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610c719190610f16565b60405180910390a380600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d0491906111f2565b14610d1257610d116111c3565b5b505050505050565b6000808284610d2991906111f2565b905083811015610d3c57610d3b6111c3565b5b8091505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d80578082015181840152602081019050610d65565b60008484015250505050565b6000601f19601f8301169050919050565b6000610da882610d46565b610db28185610d51565b9350610dc2818560208601610d62565b610dcb81610d8c565b840191505092915050565b60006020820190508181036000830152610df08184610d9d565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e2882610dfd565b9050919050565b610e3881610e1d565b8114610e4357600080fd5b50565b600081359050610e5581610e2f565b92915050565b6000819050919050565b610e6e81610e5b565b8114610e7957600080fd5b50565b600081359050610e8b81610e65565b92915050565b60008060408385031215610ea857610ea7610df8565b5b6000610eb685828601610e46565b9250506020610ec785828601610e7c565b9150509250929050565b60008115159050919050565b610ee681610ed1565b82525050565b6000602082019050610f016000830184610edd565b92915050565b610f1081610e5b565b82525050565b6000602082019050610f2b6000830184610f07565b92915050565b60008060408385031215610f4857610f47610df8565b5b6000610f5685828601610e46565b9250506020610f6785828601610e46565b9150509250929050565b600080600060608486031215610f8a57610f89610df8565b5b6000610f9886828701610e46565b9350506020610fa986828701610e46565b9250506040610fba86828701610e7c565b9150509250925092565b600060ff82169050919050565b610fda81610fc4565b82525050565b6000602082019050610ff56000830184610fd1565b92915050565b60006020828403121561101157611010610df8565b5b600061101f84828501610e46565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061106f57607f821691505b60208210810361108257611081611028565b5b50919050565b7f6661696c2076616c696400000000000000000000000000000000000000000000600082015250565b60006110be600a83610d51565b91506110c982611088565b602082019050919050565b600060208201905081810360008301526110ed816110b1565b9050919050565b7f2d696e76616c69642076616c7565000000000000000000000000000000000000600082015250565b600061112a600e83610d51565b9150611135826110f4565b602082019050919050565b600060208201905081810360008301526111598161111d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061119a82610e5b565b91506111a583610e5b565b92508282039050818111156111bd576111bc611160565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b60006111fd82610e5b565b915061120883610e5b565b92508282019050808211156112205761121f611160565b5b9291505056fea26469706673582212204d5e6b5106dc9a0b75486f866cceb7a80937bdc5d21805e91480b1ece43c939664736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c8063313ce56711610066578063313ce5671461016f57806370a082311461018d57806395d89b41146101bd578063a9059cbb146101db578063dd62ed3e1461020b5761009e565b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100f15780631a46ec821461010f57806323b872dd1461013f575b600080fd5b6100ab61023b565b6040516100b89190610dd6565b60405180910390f35b6100db60048036038101906100d69190610e91565b6102c9565b6040516100e89190610eec565b60405180910390f35b6100f96104c0565b6040516101069190610f16565b60405180910390f35b61012960048036038101906101249190610f31565b6104c6565b6040516101369190610f16565b60405180910390f35b61015960048036038101906101549190610f71565b61054d565b6040516101669190610eec565b60405180910390f35b6101776107b2565b6040516101849190610fe0565b60405180910390f35b6101a760048036038101906101a29190610ffb565b6107c5565b6040516101b49190610f16565b60405180910390f35b6101c56107dd565b6040516101d29190610dd6565b60405180910390f35b6101f560048036038101906101f09190610e91565b61086b565b6040516102029190610eec565b60405180910390f35b61022560048036038101906102209190610f31565b6108bd565b6040516102329190610f16565b60405180910390f35b6000805461024890611057565b80601f016020809104026020016040519081016040528092919081815260200182805461027490611057565b80156102c15780601f10610296576101008083540402835291602001916102c1565b820191906000526020600020905b8154815290600101906020018083116102a457829003601f168201915b505050505081565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361030557600080fd5b600083148061039057506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b6103cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c6906110d4565b60405180910390fd5b82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516104ad9190610f16565b60405180910390a3600191505092915050565b60035481565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600083600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361058957600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105c357600080fd5b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054841115610682576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067990611140565b60405180910390fd5b610708600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054856108e2565b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610793919061118f565b925050819055506107a5868686610909565b6001925050509392505050565b600260009054906101000a900460ff1681565b60046020528060005260406000206000915090505481565b600180546107ea90611057565b80601f016020809104026020016040519081016040528092919081815260200182805461081690611057565b80156108635780601f1061083857610100808354040283529160200191610863565b820191906000526020600020905b81548152906001019060200180831161084657829003601f168201915b505050505081565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108a757600080fd5b6108b2338585610909565b600191505092915050565b6005602052816000526040600020602052806000526040600020600091509150505481565b6000818310156108f5576108f46111c3565b5b8183610901919061118f565b905092915050565b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361094357600080fd5b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361097d57600080fd5b82600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156109c957600080fd5b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a5491906111f2565b11610a5e57600080fd5b6000610ae8600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d1a565b9050610b33600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054856108e2565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610bbf600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205485610d1a565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c0d91906111f2565b925050819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610c719190610f16565b60405180910390a380600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d0491906111f2565b14610d1257610d116111c3565b5b505050505050565b6000808284610d2991906111f2565b905083811015610d3c57610d3b6111c3565b5b8091505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d80578082015181840152602081019050610d65565b60008484015250505050565b6000601f19601f8301169050919050565b6000610da882610d46565b610db28185610d51565b9350610dc2818560208601610d62565b610dcb81610d8c565b840191505092915050565b60006020820190508181036000830152610df08184610d9d565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e2882610dfd565b9050919050565b610e3881610e1d565b8114610e4357600080fd5b50565b600081359050610e5581610e2f565b92915050565b6000819050919050565b610e6e81610e5b565b8114610e7957600080fd5b50565b600081359050610e8b81610e65565b92915050565b60008060408385031215610ea857610ea7610df8565b5b6000610eb685828601610e46565b9250506020610ec785828601610e7c565b9150509250929050565b60008115159050919050565b610ee681610ed1565b82525050565b6000602082019050610f016000830184610edd565b92915050565b610f1081610e5b565b82525050565b6000602082019050610f2b6000830184610f07565b92915050565b60008060408385031215610f4857610f47610df8565b5b6000610f5685828601610e46565b9250506020610f6785828601610e46565b9150509250929050565b600080600060608486031215610f8a57610f89610df8565b5b6000610f9886828701610e46565b9350506020610fa986828701610e46565b9250506040610fba86828701610e7c565b9150509250925092565b600060ff82169050919050565b610fda81610fc4565b82525050565b6000602082019050610ff56000830184610fd1565b92915050565b60006020828403121561101157611010610df8565b5b600061101f84828501610e46565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061106f57607f821691505b60208210810361108257611081611028565b5b50919050565b7f6661696c2076616c696400000000000000000000000000000000000000000000600082015250565b60006110be600a83610d51565b91506110c982611088565b602082019050919050565b600060208201905081810360008301526110ed816110b1565b9050919050565b7f2d696e76616c69642076616c7565000000000000000000000000000000000000600082015250565b600061112a600e83610d51565b9150611135826110f4565b602082019050919050565b600060208201905081810360008301526111598161111d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061119a82610e5b565b91506111a583610e5b565b92508282039050818111156111bd576111bc611160565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b60006111fd82610e5b565b915061120883610e5b565b92508282019050808211156112205761121f611160565b5b9291505056fea26469706673582212204d5e6b5106dc9a0b75486f866cceb7a80937bdc5d21805e91480b1ece43c939664736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "params": {
          "_spender": "帐户地址",
          "_value": "金额"
        }
      },
      "transfer(address,uint256)": {
        "params": {
          "_to": "address 接受代币的地址",
          "_value": "uint256 接受代币的数量"
        }
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "_from": "address 发送者地址",
          "_to": "address 接受者地址",
          "_value": "uint256 要转移的代币数量"
        },
        "returns": {
          "_0": "是否交易成功"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approve(address,uint256)": {
        "notice": "设置帐户允许支付的最大金额 一般在智能合约的时候，避免支付过多，造成风险"
      },
      "transfer(address,uint256)": {
        "notice": "从主帐户合约调用者发送给别人代币"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "从某个指定的帐户中，向另一个帐户发送代币 调用过程，会检查设置的允许最大交易额"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 619,
        "contract": "contracts/Token.sol:Token",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 622,
        "contract": "contracts/Token.sol:Token",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 625,
        "contract": "contracts/Token.sol:Token",
        "label": "decimals",
        "offset": 0,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 628,
        "contract": "contracts/Token.sol:Token",
        "label": "totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 632,
        "contract": "contracts/Token.sol:Token",
        "label": "balanceOf",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 638,
        "contract": "contracts/Token.sol:Token",
        "label": "allowance",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}